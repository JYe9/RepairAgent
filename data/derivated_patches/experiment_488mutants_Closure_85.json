[{"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() != 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (!n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Fixed the bug by adjusting the conditional check"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null && gNode != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Validate gNode before using it"]}], "deletions": [155, 160]}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 183, "new_lines": ["// Check if fallThrough is not null before using it"]}], "deletions": [160, 161, 162, 163, 164, 165, 166]}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.isEmpty()) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Handle the case when outEdges is empty"]}], "deletions": [155]}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getParentNode().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["// Fixed the bug by accessing the parent node correctly"]}], "deletions": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() != 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.IF:"], ["161", "        if (!n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        // Inserted line to fix the bug", "        return tryRemoveUnconditionalBranching(n);"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        // Added a comment here for clarity", "        return tryRemoveUnconditionalBranching(n);"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null && gNode != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug", "        return null; // Inserted line to fix the bug"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        // Fix the bug by adding a return statement", "        return tryRemoveUnconditionalBranching(n);"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        // Fix the bug by returning a different value", "        return n;"]}], "deletions": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 183]}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(first); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n)); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n.getFirstChild()); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n.getFirstChild())); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(first); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n)); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(gNode); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(gNode.getOutEdges().get(0).getDestination().getValue()); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return computeFollowing(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return computeFollowing(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return computeFollowing(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return computeFollowing(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]], "insertions": [], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]], "insertions": [], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]], "insertions": [], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]], "insertions": [], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]], "insertions": [], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]], "insertions": [], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]], "insertions": [], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]], "insertions": [], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]], "insertions": [], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]], "insertions": [], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]], "insertions": [], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() != 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null && n.getType() != Token.RETURN && n.getType() != Token.BREAK && n.getType() != Token.CONTINUE) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() != 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() != 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() != 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (!n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() != null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 0) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return n; // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return ControlFlowAnalysis.computeFollowNode(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return outEdges.get(0).getDestination().getValue(); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return n.getParent(); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 153, "modified_line": "    if (n.getParent() == null && n.getType() != Token.RETURN && n.getType() != Token.BREAK && n.getType() != Token.CONTINUE) {"}, {"line_number": 196, "modified_line": "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"}]}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 153, "modified_line": "    if (n.getParent() == null && n.getType() != Token.RETURN && n.getType() != Token.BREAK && n.getType() != Token.CONTINUE) {"}, {"line_number": 196, "modified_line": "        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"}]}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(computeFollowing(n)); // Inserted line to fix the bug"]}], "deletions": [183], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(first); // Inserted line to fix the bug"]}], "deletions": [183], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n)); // Inserted line to fix the bug"]}], "deletions": [183], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue()); // Inserted line to fix the bug"]}], "deletions": [183], "modifications": []}, {"file_name": "com/google/javascript/jscomp/UnreachableCodeElimination.java", "target_lines": [["153", "    if (n.getParent() == null) {"], ["154", "      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();"], ["155", "      if (outEdges.size() == 1) {"], ["156", "        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());"], ["157", "      }"], ["158", "    }"], ["160", "      case Token.BLOCK:"], ["161", "        if (n.hasChildren()) {"], ["162", "          Node first = n.getFirstChild();"], ["163", "          return tryRemoveUnconditionalBranching(first);"], ["164", "        } else {"], ["165", "          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));"], ["166", "        }"], ["183", "          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));"], ["196", "//"]], "insertions": [{"line_number": 196, "new_lines": ["        return tryRemoveUnconditionalBranching(n); // Inserted line to fix the bug"]}], "deletions": [183], "modifications": []}]