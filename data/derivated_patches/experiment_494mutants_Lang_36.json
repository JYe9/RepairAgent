[{"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 1387, "new_lines": ["        return createNumber(str);"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) || lastChar == ' ') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Comment added for clarity"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Checking if lastChar is a digit before processing"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) || lastChar == '\n') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '\t') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isDigit(lastChar)) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isDigit(lastChar) && lastChar != '.') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Fixing digit checking condition"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != ',') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Adding additional check for lastChar"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Ensure lastChar is a digit before processing"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != ':') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Adding condition to check for non-digit lastChar"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Additional check for lastChar not being a digit"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Validate lastChar as a digit before processing"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != ';') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Check if lastChar is a digit before proceeding"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '_') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Condition to verify lastChar is a digit"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Ensure lastChar is not a non-digit character"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isDigit(lastChar)) { // Positive check for lastChar being a digit"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Verifying lastChar as a digit before processing"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '*') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar)) { // Adding condition to check for non-digit lastChar"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isDigit(lastChar)) { // Check if lastChar is a digit for processing"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isDigit(lastChar) && lastChar != ',') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && lastChar != 'f') {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isLetter(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isWhitespace(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isLetterOrDigit(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isUpperCase(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isLowerCase(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isJavaIdentifierPart(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isISOControl(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isWhitespace(lastChar) && lastChar != 'f') {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isWhitespace(lastChar) && !Character.isLetterOrDigit(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) || lastChar == '.') {", "            throw new NumberFormatException(str + \" is not a valid number.\");", "        }"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && lastChar != 'f' && lastChar != 'd' && lastChar != 'D' && lastChar != 'F' && lastChar != 'l' && lastChar != 'L') {", "            throw new NumberFormatException(str + \" is not a valid number.\");", "        }"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isLetter(lastChar)) {", "            throw new NumberFormatException(str + \" is not a valid number.\");", "        }"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isWhitespace(lastChar)) {", "            throw new NumberFormatException(str + \" is not a valid number.\");", "        }"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && lastChar != ' ' && lastChar != '\\t') {", "            throw new NumberFormatException(str + \" is not a valid number.\");", "        }"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isAlphabetic(lastChar)) {", "            throw new NumberFormatException(str + \" is not a valid number.\");", "        }"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isUpperCase(lastChar)) {", "            throw new NumberFormatException(str + \" is not a valid number.\");", "        }"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isLowerCase(lastChar)) {", "            throw new NumberFormatException(str + \" is not a valid number.\");", "        }"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && !Character.isWhitespace(lastChar) && !Character.isLetter(lastChar)) {", "            throw new NumberFormatException(str + \" is not a valid number.\");", "        }"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.') {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isLetter(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.startsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isLetterOrDigit(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.contains(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isJavaIdentifierPart(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.startsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isLetterOrDigit(lastChar) || lastChar == '.') {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isLetterOrDigit(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.startsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isLetterOrDigit(lastChar) && lastChar != '.') {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (lastChar != '.') {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isLetter(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (lastChar != '.') {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isJavaIdentifierPart(lastChar)) {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isLetterOrDigit(lastChar) || lastChar == '.') {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.') {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) || lastChar == '.') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isDigit(lastChar)) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && lastChar != 'F') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isDigit(lastChar) || lastChar == '.') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isDigit(lastChar) && lastChar != '.') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (Character.isDigit(lastChar) || lastChar == 'F') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && lastChar != 'L') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\") && str.length() > 1) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.' && lastChar != 'F' && lastChar != 'L') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang3/math/NumberUtils.java", "target_lines": [["491", "        if (!Character.isDigit(lastChar)) {"], ["1387", "//"]], "insertions": [{"line_number": 491, "new_lines": ["        if (!Character.isDigit(lastChar) && lastChar != '.') {"]}, {"line_number": 1387, "new_lines": ["        if (str.endsWith(\".\")) {", "            str = str.substring(0, str.length() - 1);"]}]}]