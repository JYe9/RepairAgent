[{"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (!options.hasOption(arg.substring(0, 2)))"]], "insertions": [{"line_number": 81, "new_lines": ["                    {", "                        throw new IllegalArgumentException(\"Invalid option: \" + arg.substring(0, 2));", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"]], "insertions": [{"line_number": 81, "new_lines": ["                    {", "                        if (arg.substring(0, 2).equals(\"--\")) {", "                            throw new IllegalArgumentException(\"Invalid option format: \" + arg);", "                        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"]], "insertions": [{"line_number": 81, "new_lines": ["                    {", "                        if (arg.startsWith(\"-\")) {", "                            throw new IllegalArgumentException(\"Invalid option format: \" + arg);", "                        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"]], "insertions": [{"line_number": 81, "new_lines": ["                    {", "                        if (arg.startsWith(\"--\") && arg.length() > 2) {", "                            throw new IllegalArgumentException(\"Invalid option format: \" + arg);", "                        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"]], "insertions": [{"line_number": 81, "new_lines": ["                    {", "                        if (arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                            throw new IllegalArgumentException(\"Invalid option format: \" + arg);", "                        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"]], "insertions": [{"line_number": 81, "new_lines": ["                    {", "                        if (arg.startsWith(\"--\") && arg.contains(\"=\") && arg.length() > 3) {", "                            throw new IllegalArgumentException(\"Invalid option format: \" + arg);", "                        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"]], "insertions": [{"line_number": 81, "new_lines": ["                    {", "                        if (arg.startsWith(\"--\") && arg.length() > 2 && arg.contains(\"=\")) {", "                            throw new IllegalArgumentException(\"Invalid option format: \" + arg);", "                        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"]], "insertions": [{"line_number": 81, "new_lines": ["                    {", "                        throw new UnrecognizedOptionException(\"Unrecognized option: \" + arg);", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"]], "insertions": [{"line_number": 81, "new_lines": ["                    {", "                        throw new UnrecognizedOptionException(\"Option not recognized: \" + arg.substring(0, 2));", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"]], "insertions": [{"line_number": 81, "new_lines": ["                    {", "                        throw new UnrecognizedOptionException(\"Unrecognized option: \" + arg.substring(0, 2));", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2))) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.length() > 1) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.length() > 1) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.length() > 1) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.length() > 1) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}, {"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (optVal.contains(\"=\")) {", "                            optVal = optVal.substring(optVal.indexOf(\"=\") + 1);", "                        }", "                        tokenList.add(optVal);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg != null && arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\") && arg.length() > 2) {", "                        tokenList.add(arg.substring(0, 2));", "                        tokenList.add(arg.substring(3));", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg != null && arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts != null && parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg != null && arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (optVal != null && !optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg != null && arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\")) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.startsWith(\"-\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\") && arg.length() > 2) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\") && arg.startsWith(\"-\") && arg.length() > 2) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\") && arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg) || options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) || arg.contains(\"=\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg) || options.hasOption(arg.substring(0, 2)) || arg.contains(\"=\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg) || options.hasOption(arg.substring(0, 2)) || arg.contains(\"=\") && arg.length() > 2) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg) || options.hasOption(arg.substring(0, 2)) || arg.contains(\"=\") && arg.startsWith(\"-\") && arg.length() > 2) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 1: Remove closing parenthesis"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 2: Change substring parameters"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 3))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 3: Change condition to check full argument"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg)"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 4: Change condition to check for null argument"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null && options.hasOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 5: Add additional condition to check for empty argument"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (!arg.isEmpty() && options.hasOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 6: Change method call to a different method"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.containsOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 7: Invert the condition"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (!options.hasOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 8: Change to check for long option"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"--\") && options.hasOption(arg.substring(2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 9: Change method call to a different method"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.containsOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 10: Add a log statement before the condition"], ["84", "//"]], "insertions": [{"line_number": 80, "new_lines": ["                    System.out.println(\"Checking option: \" + arg);"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 11: Change variable name"], ["84", "//"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 81, "modified_line": "                    if (options.hasOption(argument.substring(0, 2))"}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 12: Change to check for full argument"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg)"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 13: Add a null check for the argument"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null && options.hasOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 14: Change condition to check for empty argument"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (!arg.isEmpty() && options.hasOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 15: Invert the condition"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (!options.hasOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 16: Change to check for long option"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"--\") && options.hasOption(arg.substring(2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 17: Change method call to a different method"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.containsOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 18: Add a log statement before the condition"], ["84", "//"]], "insertions": [{"line_number": 80, "new_lines": ["                    System.out.println(\"Checking option: \" + arg);"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 19: Change variable name"], ["84", "//"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 81, "modified_line": "                    if (options.hasOption(argument.substring(0, 2))"}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 20: Change to check for full argument"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg)"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 21: Add a null check for the argument"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null && options.hasOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 22: Change condition to check for empty argument"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (!arg.isEmpty() && options.hasOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 23: Invert the condition"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (!options.hasOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 24: Change to check for long option"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"--\") && options.hasOption(arg.substring(2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 25: Change method call to a different method"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.containsOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 26: Add a log statement before the condition"], ["84", "//"]], "insertions": [{"line_number": 80, "new_lines": ["                    System.out.println(\"Checking option: \" + arg);"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 27: Change variable name"], ["84", "//"]], "insertions": [], "deletions": [], "modifications": [{"line_number": 81, "modified_line": "                    if (options.hasOption(argument.substring(0, 2))"}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 28: Change to check for full argument"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg)"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 29: Add a null check for the argument"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null && options.hasOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)) // Mutation 30: Change condition to check for empty argument"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (!arg.isEmpty() && options.hasOption(arg.substring(0, 2))"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\":\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\".\") {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"-\") {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"/\") {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\",\") {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"_\") {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"*\") {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"(\") {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\")\") {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"!\") {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts != null && parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg != null && arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        if (optVal != null) {", "                            tokenList.add(opt);", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts != null && parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg != null && arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        if (optVal != null) {", "                            tokenList.add(opt);", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts != null && parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg != null && arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        if (optVal != null) {", "                            tokenList.add(opt);", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts != null && parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg != null && arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        if (optVal != null) {", "                            tokenList.add(opt);", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts != null && parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg != null && arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        if (optVal != null) {", "                            tokenList.add(opt);", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts != null && parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts != null && parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts != null && parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null) {", "                        if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                            String[] parts = arg.split(\"=\", 2);", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        } else {", "                            tokenList.add(arg);", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null) {", "                        if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                            String[] parts = arg.split(\"=\", 2);", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        } else if (arg.startsWith(\"--\")) {", "                            tokenList.add(arg);", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        } else {", "                            tokenList.add(arg);", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null) {", "                        if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                            String[] parts = arg.split(\"=\", 2);", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        } else if (arg.startsWith(\"--\")) {", "                            tokenList.add(arg);", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                            String opt = arg.substring(0, 2);", "                            String optVal = arg.substring(2);", "                            tokenList.add(opt);", "                            if (!optVal.isEmpty()) {", "                                tokenList.add(optVal);", "                            }", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        } else {", "                            tokenList.add(arg);", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null) {", "                        if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                            String[] parts = arg.split(\"=\", 2);", "                            if (parts.length == 2) {", "                                tokenList.add(parts[0]);", "                                tokenList.add(parts[1]);", "                            }", "                        } else if (arg.startsWith(\"--\")) {", "                            tokenList.add(arg);", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                            String opt = arg.substring(0, 2);", "                            String optVal = arg.substring(2);", "                            tokenList.add(opt);", "                            if (!optVal.isEmpty()) {", "                                tokenList.add(optVal);", "                            }", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        } else {", "                            tokenList.add(arg);", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (arg != null) {", "                        if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                            String[] parts = arg.split(\"=\", 2);", "                            if (parts != null && parts.length == 2) {", "                                tokenList.add(parts[0]);", "                                tokenList.add(parts[1]);", "                            }", "                        } else if (arg.startsWith(\"--\")) {", "                            tokenList.add(arg);", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                            String opt = arg.substring(0, 2);", "                            String optVal = arg.substring(2);", "                            tokenList.add(opt);", "                            if (!optVal.isEmpty()) {", "                                tokenList.add(optVal);", "                            }", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        } else {", "                            tokenList.add(arg);", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.startsWith(\"--\") && arg.contains(\"=\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.startsWith(\"--\") && arg.length() > 2) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.startsWith(\"--\") && arg.contains(\"=\") && arg.length() > 2) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.startsWith(\"--\") && arg.length() > 2 && arg.contains(\"=\") ) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\") && !arg.startsWith(\"--\")) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\") && !arg.startsWith(\"--\") && arg.length() > 2) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\") && !arg.startsWith(\"--\") && arg.length() > 2) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                    if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\") && !arg.startsWith(\"--\") && arg.length() > 2) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 81, "new_lines": ["                if (arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                    String[] parts = arg.split(\"=\", 2);", "                    tokenList.add(parts[0]);", "                    tokenList.add(parts[1]);", "                } else if (arg.startsWith(\"--\")) {", "                    tokenList.add(arg);", "                    if (stopAtNonOption) {", "                        eatTheRest = true;", "                    }", "                } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                    String opt = arg.substring(0, 2);", "                    String optVal = arg.substring(2);", "                    tokenList.add(opt);", "                    if (!optVal.isEmpty()) {", "                        tokenList.add(optVal);", "                    }", "                    if (stopAtNonOption) {", "                        eatTheRest = true;", "                    }", "                } else {", "                    tokenList.add(arg);", "                    if (stopAtNonOption) {", "                        eatTheRest = true;", "                    }", "                }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\")) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (optVal.contains(\"=\")) {", "                            optVal = optVal.substring(optVal.indexOf(\"=\") + 1);", "                        }", "                        tokenList.add(optVal);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg != null && arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 83, "new_lines": ["                if (arg != null && arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                    String[] parts = arg.split(\"=\", 2);", "                    tokenList.add(parts[0]);", "                    tokenList.add(parts[1]);", "                } else if (arg != null && arg.startsWith(\"--\")) {", "                    tokenList.add(arg);", "                    if (stopAtNonOption) {", "                        eatTheRest = true;", "                    }", "                } else if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                    String opt = arg.substring(0, 2);", "                    String optVal = arg.substring(2);", "                    tokenList.add(opt);", "                    if (!optVal.isEmpty()) {", "                        tokenList.add(optVal);", "                    }", "                    if (stopAtNonOption) {", "                        eatTheRest = true;", "                    }", "                } else {", "                    tokenList.add(arg);", "                    if (stopAtNonOption) {", "                        eatTheRest = true;", "                    }", "                }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 83, "new_lines": ["                if (arg != null) {", "                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 83, "new_lines": ["                if (arg != null) {", "                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 83, "new_lines": ["                if (arg != null) {", "                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 83, "new_lines": ["                if (arg != null) {", "                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts != null && parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 83, "new_lines": ["                if (arg != null) {", "                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts != null && parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts != null && parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        if (parts.length == 2) {", "                            tokenList.add(parts[1]);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null && arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2)))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"--\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        if (parts.length == 2) {", "                            tokenList.add(parts[0]);", "                            tokenList.add(parts[1]);", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"], ["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg.startsWith(\"-\") && arg.contains(\"=\")) {", "                        String[] parts = arg.split(\"=\", 2);", "                        tokenList.add(parts[0]);", "                        tokenList.add(parts[1]);", "                    } else if (arg.startsWith(\"--\")) {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                        String opt = arg.substring(0, 2);", "                        String optVal = arg.substring(2);", "                        tokenList.add(opt);", "                        if (!optVal.isEmpty()) {", "                            tokenList.add(optVal);", "                        }", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    } else {", "                        tokenList.add(arg);", "                        if (stopAtNonOption) {", "                            eatTheRest = true;", "                        }", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.contains(\"=\") {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.length() > 2) {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.matches(\".*=.*\") {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) || arg.contains(\"=\") {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) || arg.length() > 2) {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) || arg.matches(\".*=.*\") {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.indexOf(\"=\") != -1 {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.lastIndexOf(\"=\") > 1 {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.charAt(2) == '=' {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.endsWith(\"=\") {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && !arg.isEmpty() {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.length() > 2 && arg.charAt(2) == '=' {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["81", "                    if (options.hasOption(arg.substring(0, 2))"]], "insertions": [{"line_number": 81, "new_lines": ["                if (options.hasOption(arg.substring(0, 2)) && arg.endsWith(\"=\") && arg.length() > 2 {"]}]}, {"file_name": "org/apache/commons/cli/GnuParser.java", "target_lines": [["84", "//"]], "insertions": [{"line_number": 84, "new_lines": ["                    if (arg != null) {", "                        if (arg.startsWith(\"--\") && arg.contains(\"=\") {", "                            String[] parts = arg.split(\"=\", 2);", "                            if (parts != null && parts.length == 2) {", "                                tokenList.add(parts[0]);", "                                tokenList.add(parts[1]);", "                            }", "                        } else if (arg.startsWith(\"--\")) {", "                            tokenList.add(arg);", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        } else if (arg.startsWith(\"-\") && arg.length() > 1) {", "                            String opt = arg.substring(0, 2);", "                            String optVal = arg.substring(2);", "                            if (optVal != null) {", "                                tokenList.add(opt);", "                                tokenList.add(optVal);", "                            }", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        } else {", "                            tokenList.add(arg);", "                            if (stopAtNonOption) {", "                                eatTheRest = true;", "                            }", "                        }", "                    }"]}]}]