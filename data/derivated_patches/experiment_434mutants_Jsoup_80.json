[{"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["Element el = doc.child(0); // Inserted to fix IndexOutOfBoundsException"]}, {"line_number": 94, "new_lines": ["// Inserted to fix IndexOutOfBoundsException"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["// Adding a null check for doc before accessing child(0)"]}, {"line_number": 94, "new_lines": ["// Adding a null check for el before performing operations"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["Element el = doc.childNode(0); // Fixed IndexOutOfBoundsException by using childNode"]}, {"line_number": 94, "new_lines": ["// Added null check for el to prevent NullPointerException"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["// Ensure doc has children before accessing Element"]}, {"line_number": 94, "new_lines": ["// Check if el is not null before performing operations"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["Element el = doc.selectFirst(\"*\"); // Get first child element to avoid IndexOutOfBoundsException"]}, {"line_number": 94, "new_lines": ["// Add null check for el to prevent NullPointerException"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() > 1) {"]}, {"line_number": 94, "new_lines": ["            }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() >= 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() >= 1) {"]}, {"line_number": 94, "new_lines": ["            }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            // Handle empty children case"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() == 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() == 1) {"]}, {"line_number": 94, "new_lines": ["            }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() != 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() != 1) {"]}, {"line_number": 94, "new_lines": ["            }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (!doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (!doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (!doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (!doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            Element el = doc.child(0);"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            Element el = doc.child(0);"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (!doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            Element el = doc.child(0);"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            Element el = doc.child(0);"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            Element el = doc.childNode(0);"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            Element el = doc.childNode(0);"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (!doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            Element el = doc.childNode(0);"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            Element el = doc.childNode(0);"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (!doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (!doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (!doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && !doc.children().isEmpty()) {"]}, {"line_number": 94, "new_lines": ["            }"]}]}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc == null) {", "            return; // Add a return statement to handle null doc", "        }"]}, {"line_number": 94, "new_lines": ["        if (doc.children().size() == 0) {", "            return; // Add a return statement if children size is 0", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() == 0) {", "            return; // Add a return statement if children size is 0", "        }"]}, {"line_number": 94, "new_lines": ["        if (doc == null) {", "            return; // Add a return statement to handle null doc", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc == null || doc.children().size() == 0) {", "            return; // Add a return statement to handle null doc or empty children", "        }"]}, {"line_number": 94, "new_lines": ["        if (doc == null) {", "            return; // Add a return statement to handle null doc", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {", "            Element el = doc.child(0);", "            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));", "            insert.attributes().addAll(el.attributes());", "        } else {", "            return; // Add a return statement if children size is 0", "        }"]}, {"line_number": 94, "new_lines": ["        if (doc == null) {", "            return; // Add a return statement to handle null doc", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {", "            Element el = doc.child(0);", "            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));", "            insert.attributes().addAll(el.attributes());", "        } else {", "            return; // Add a return statement if children size is 0", "        }"]}, {"line_number": 94, "new_lines": ["        if (doc != null && doc.children().size() == 0) {", "            return; // Add a return statement if children size is 0", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc == null || doc.children().size() == 0) {", "            return; // Add a return statement to handle null doc or empty children", "        }"]}, {"line_number": 94, "new_lines": ["        if (doc != null && doc.children().size() > 0) {", "            Element el = doc.child(0);", "            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));", "            insert.attributes().addAll(el.attributes());", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc == null || doc.children().size() == 0) {", "            return; // Add a return statement to handle null doc or empty children", "        }"]}, {"line_number": 94, "new_lines": ["        if (doc == null) {", "            return; // Add a return statement to handle null doc", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc == null) {", "            return; // Add a return statement to handle null doc", "        }"]}, {"line_number": 94, "new_lines": ["        if (doc != null && doc.children().size() > 0) {", "            Element el = doc.child(0);", "            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));", "            insert.attributes().addAll(el.attributes());", "        } else {", "            return; // Add a return statement if children size is 0", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {", "            Element el = doc.child(0);", "            insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));", "            insert.attributes().addAll(el.attributes());", "        } else {", "            return; // Add a return statement if children size is 0", "        }"]}, {"line_number": 94, "new_lines": ["        if (doc == null || doc.children().size() == 0) {", "            return; // Add a return statement to handle null doc or empty children", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() == 0) {", "            return; // Add a return statement if children size is 0", "        }"]}, {"line_number": 94, "new_lines": ["        if (doc == null) {", "            return; // Add a return statement to handle null doc", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/jsoup/parser/XmlTreeBuilder.java", "target_lines": [["91", "//"], ["94", "//"]], "insertions": [{"line_number": 91, "new_lines": ["        if (doc != null && doc.children().size() > 0) {"]}, {"line_number": 94, "new_lines": ["            }"]}], "deletions": [], "modifications": []}]