[{"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    public static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str.contains(\"\\\"\")){", "            str = str.replace(\"\\\"\", \"\\\\\\\"\");", "        }"]}, {"line_number": 245, "new_lines": ["        return str;"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str.contains(\"\\\\\"\")){", "            str = str.replace(\"\\\\\"\", \"\\\\\\\\\\\"\");", "        }"]}, {"line_number": 245, "new_lines": ["        return str;"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str.contains(\"'\")){", "            str = str.replace(\"'\", \"\\\\'\");", "        }"]}, {"line_number": 245, "new_lines": ["        return str;"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str.contains(\"\\\\'\")){", "            str = str.replace(\"\\\\'\", \"\\\\\\\\'\");", "        }"]}, {"line_number": 245, "new_lines": ["        return str;"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str.contains(\"\\\\\"\")){", "            str = str.replace(\"\\\\\"\", \"\\\\\\\\\\\"\");", "        }"]}, {"line_number": 245, "new_lines": ["        return str;"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str.contains(\"'\")){", "            str = str.replace(\"'\", \"\\\\'\");", "        }"]}, {"line_number": 245, "new_lines": ["        return str;"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, !escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuffer result = new StringBuffer();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        String result = \"\";", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result += '\\\\\\\\'; // escape backslash", "            } else {", "                result += c;", "            }", "        }", "        return result;"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuffer result = new StringBuffer();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append(\"\\\\\\\\\"); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append(\"\\\\\\\\\"); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuffer result = new StringBuffer();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append(\"\\\\\\\\\"); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuffer result = new StringBuffer();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append(\"\\\\\\\\\"); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append(\"\\\\\\\\\"); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 245, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\'') {", "                result.append('\\\\'); // escape single quote", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}, {"line_number": 245, "new_lines": ["// New line of code to fix the bug"]}]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}], "deletions": [86, 102, 127, 143, 154, 160, 178]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Perform additional operations here to fix the bug", "        ", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Fix the bug by adding necessary checks and modifications", "        ", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Add the necessary logic to handle the escape characters correctly", "        ", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Implement the fix by properly escaping characters in the string", "        ", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Make necessary changes to properly handle escape characters in the string", "        ", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Fix the issue by properly formatting the string with escaped characters", "        ", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Ensure the correct escape of characters in the string to fix the bug", "        ", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Correctly handle the escaping of characters in the string to resolve the bug", "        ", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Add the necessary logic to properly escape characters in the string", "        ", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Adjust the escaping of characters in the string to fix the bug", "        ", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Make the necessary adjustments to escape characters in the string correctly", "        ", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        ", "        // Fix the escaping of characters in the string as needed to correct the bug", "        ", "        "]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, false);"], ["102", "        escapeJavaStyleString(out, str, false);"], ["127", "        return escapeJavaStyleString(str, true);"], ["143", "        escapeJavaStyleString(out, str, true);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}, {"file_name": "org/apache/commons/lang/StringEscapeUtils.java", "target_lines": [["86", "        return escapeJavaStyleString(str, true);"], ["102", "        escapeJavaStyleString(out, str, true);"], ["127", "        return escapeJavaStyleString(str, false);"], ["143", "        escapeJavaStyleString(out, str, false);"], ["154", "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"], ["160", "            escapeJavaStyleString(writer, str, escapeSingleQuotes);"], ["178", "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"], ["244", "//"], ["245", "//"]], "insertions": [{"line_number": 244, "new_lines": ["        if (str == null) {", "            return null;", "        }", "        StringBuilder result = new StringBuilder();", "        for (int i = 0; i < str.length(); i++) {", "            char c = str.charAt(i);", "            if (c == '\\\\') {", "                result.append('\\\\\\\\'); // escape backslash", "            } else {", "                result.append(c);", "            }", "        }", "        return result.toString();"]}]}]