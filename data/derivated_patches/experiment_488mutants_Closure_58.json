[{"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["        // Inserted line to fix the bug at line 206"]}, {"line_number": 208, "new_lines": ["        // Inserted line to fix the bug at line 208"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Adding missing if statement to handle special case of for-in loop", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "}", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return; }"]}, {"line_number": 208, "new_lines": ["// Adding missing return statement for for-in loop handling", "return;"]}]}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "}", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "}", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "}", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "}", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/LiveVariablesAnalysis.java", "target_lines": [["206", "//"], ["208", "//"]], "insertions": [{"line_number": 206, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "}", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}, {"line_number": 208, "new_lines": ["// Fixing for-in loop handling", "if (NodeUtil.isForIn(n)) {", "Node lhs = n.getFirstChild();", "Node rhs = lhs.getNext();", "if (NodeUtil.isVar(lhs)) {", "lhs = lhs.getLastChild();", "}", "addToSetIfLocal(lhs, kill);", "addToSetIfLocal(lhs, gen);", "computeGenKill(rhs, gen, kill, conditional);", "return;", "}"]}], "deletions": [], "modifications": []}]