[{"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", "char ch0 = str.charAt(0);", "char ch1 = str.charAt(1);", "return (ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N');"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", "char ch = str.charAt(0);", "return (ch == 't');"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", "char ch0 = str.charAt(0);", "char ch1 = str.charAt(1);", "return (ch0 == 'y' || ch0 == 'Y') && (ch1 == 'e' || ch1 == 'E');"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", "char ch = str.charAt(0);", "return (ch == 'f' || ch == 'F');"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", "char ch0 = str.charAt(0);", "char ch1 = str.charAt(1);", "char ch2 = str.charAt(2);", "return (ch0 == 't' || ch0 == 'T') && (ch1 == 'r' || ch1 == 'R') && (ch2 == 'u' || ch2 == 'U');"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", "char ch0 = str.charAt(0);", "char ch1 = str.charAt(1);", "char ch2 = str.charAt(2);", "return (ch0 == 't' || ch0 == 'T') && (ch1 == 'r' || ch1 == 'R') && (ch2 == 'u' || ch2 == 'U');"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", "char ch0 = str.charAt(0);", "char ch1 = str.charAt(1);", "return (ch0 == 't' || ch0 == 'T') && (ch1 == 'r' || ch1 == 'R');"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 2: {", "char ch0 = str.charAt(0);", "char ch1 = str.charAt(1);", "return (ch0 == 'n' || ch0 == 'N') && (ch1 == 'o' || ch1 == 'O');"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 2: {", "char ch = str.charAt(0);", "return (ch == 'f' || ch == 'F');"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 2: {", "char ch = str.charAt(0);", "return (ch == 'y' || ch == 'Y');"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {\n", " char ch = str.charAt(0);\n", " if (ch == 'y') {\n", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n", " }\n", " if (ch == 'Y') {\n", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n", " }\n", "}\n"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {\n", " char ch = str.charAt(0);\n", " if (ch == 'y' && str.length() >= 3) {\n", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n", " }\n", " if (ch == 'Y') {\n", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n", " }\n", "}\n"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {\n", " char ch = str.charAt(0);\n", " if (ch == 'y') {\n", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n", " }\n", " if (ch == 'Y' && str.length() >= 3) {\n", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n", " }\n", "}\n"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {\n", " char ch = str.charAt(0);\n", " if (ch == 'y' && str.length() >= 4) {\n", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n", " }\n", " if (ch == 'Y') {\n", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n", " }\n", "}\n"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {\n", " char ch = str.charAt(0);\n", " if (ch == 'y') {\n", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n", " }\n", " if (ch == 'Y') {\n", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n", " }\n", "}\n"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {\n", " char ch = str.charAt(0);\n", " if (ch == 'y' && str.length() >= 4) {\n", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n", " }\n", " if (ch == 'Y' && str.length() >= 4) {\n", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n", " }\n", "}\n"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {\n", " char ch = str.charAt(0);\n", " if (ch == 'y' && str.length() >= 3) {\n", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n", " }\n", " if (ch == 'Y' && str.length() >= 3) {\n", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n", " }\n", "}\n"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {\n", " char ch = str.charAt(0);\n", " if (ch == 'y') {\n", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n", " }\n", " if (ch == 'Y') {\n", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n", " }\n", "}\n"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 2: {\n", " char ch = str.charAt(0);\n", " if (ch == 'y') {\n", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E');\n", " }\n", " if (ch == 'Y') {\n", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e');\n", " }\n", "}\n"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {\n", " char ch = str.charAt(0);\n", " if (ch == 'y') {\n", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');\n", " }\n", " if (ch == 'Y') {\n", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');\n", " }\n", "}\n"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", "    if (str == null) {", "        return false;", "    }", "    ", "    str = str.trim(); // Remove leading and trailing whitespaces", "    ", "    if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", "        return true;", "    } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", "        return false;", "    } else {", "        throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", "    }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", "    if (str == null) {", "        return false;", "    }", "    ", "    str = str.trim(); // Remove leading and trailing whitespaces", "    ", "    if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", "        return true;", "    } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", "        return false;", "    } else {", "        throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", "    }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", "    if (str == null) {", "        return false;", "    }", "    ", "    str = str.trim(); // Remove leading and trailing whitespaces", "    ", "    if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", "        return true;", "    } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", "        return false;", "    } else {", "        throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", "    }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", " if (str == null) {", " return false;", " }", " ", " str = str.trim(); // Remove leading and trailing whitespaces", " ", " if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", " return true;", " } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", " return false;", " } else {", " throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: { char ch = str.charAt(0); if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["public boolean toBoolean(String str) {", " if (str == null) {", " return false;", " }", " ", " str = str.trim(); // Remove leading and trailing whitespaces", " ", " if (str.equalsIgnoreCase(\"true\") || str.equals(\"1\")) {", " return true;", " } else if (str.equalsIgnoreCase(\"false\") || str.equals(\"0\")) {", " return false;", " } else {", " throw new IllegalArgumentException(\"Invalid boolean string: \" + str);", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: { char ch = str.charAt(0); if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: { char ch = str.charAt(0); if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't') {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 3: {", " char ch = str.charAt(0);", " if (ch == 'y') {", " return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", " }", " if (ch == 'Y') {", " return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", " }", "}"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: {", " char ch = str.charAt(0);", " if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["case 4: { char ch = str.charAt(0); if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["684", "//"]], "insertions": [{"line_number": 684, "new_lines": ["                char ch = str.charAt(0);"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["// Fixing the bug by handling case 3 properly"]}]}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                case 3: {", "                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }", "                }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 'y') {", "                        return (str.charAt(1) == 'e' || str.charAt(1) == 'E') && (str.charAt(2) == 's' || str.charAt(2) == 'S');", "                    }", "                    if (ch == 'Y') {", "                        return (str.charAt(1) == 'E' || str.charAt(1) == 'e') && (str.charAt(2) == 'S' || str.charAt(2) == 's');", "                    }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                    char ch = str.charAt(0);", "                    if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/lang/BooleanUtils.java", "target_lines": [["682", "//"]], "insertions": [{"line_number": 682, "new_lines": ["                char ch = str.charAt(0);", "                if (ch == 't' && str.length() >= 4) {"]}], "deletions": [], "modifications": []}]