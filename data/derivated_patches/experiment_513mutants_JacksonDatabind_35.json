[{"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 99, "new_lines": ["\t\tJsonDeserializer<Object> deserializer = ctxt.findContextualValueDeserializer(p.getCurrentValue(), null, null);\n"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["\t\t\tif (p.getCurrentToken() != JsonToken.START_OBJECT) {\n", "\t\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["\t\t\tif (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.END_OBJECT) {\n", "\t\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["\t\t\tif (p.getCurrentToken() == JsonToken.FIELD_NAME) {\n", "\t\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.FIELD_NAME, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["\tif (p.getCurrentToken() != JsonToken.FIELD_NAME) {\n", "\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.FIELD_NAME, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["\t\t\tif (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.END_OBJECT) {\n", "\t\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["\t\t\tif (p.getCurrentToken() == JsonToken.FIELD_NAME) {\n", "\t\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.FIELD_NAME, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["\tif (p.getCurrentToken() != JsonToken.FIELD_NAME) {\n", "\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.FIELD_NAME, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["\t\t\tif (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.END_OBJECT) {\n", "\t\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.START_OBJECT, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["\tif (p.getCurrentToken() == JsonToken.FIELD_NAME) {\n", "\t\t\tthrow ctxt.wrongTokenException(p, JsonToken.FIELD_NAME, \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());\n", "\t\t}"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 99, "new_lines": ["\t\tJsonDeserializer<Object> deserializer = ctxt.findRootValueDeserializer(ctxt.constructType(Object.class));\n"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            if (p.nextToken() != JsonToken.FIELD_NAME) {"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");", "            }"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");", "            }"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");", "            }"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");", "            }"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");", "            }"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object and String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT && p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object and String that contains type id (for subtype of \" + baseTypeName() + \")\");", "            }"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 91, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != null) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName() + \");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName() + \");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,"], ["91", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT) {"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,"], ["91", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [], "deletions": [89, 90, 91], "modifications": [{"line_number": 92, "modified_line": "        if (p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.START_OBJECT) {"}]}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [], "deletions": [89, 90, 91], "modifications": [{"line_number": 92, "modified_line": "        if (p.getCurrentToken() == JsonToken.FIELD_NAME && p.getCurrentToken() == JsonToken.START_OBJECT) {"}]}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [], "deletions": [89, 90, 91], "modifications": [{"line_number": 92, "modified_line": "        if (p.getCurrentToken() != JsonToken.FIELD_NAME && p.getCurrentToken() != JsonToken.START_OBJECT) {"}]}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [], "deletions": [89, 90, 91], "modifications": [{"line_number": 92, "modified_line": "        if (p.getCurrentToken() == JsonToken.FIELD_NAME && p.getCurrentToken() == JsonToken.START_OBJECT) {"}]}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,"], ["91", "                    \"need JSON String that contains type id (for subtype of \"+baseTypeName()+\")\");"], ["92", "        }"], ["98", "//"]], "insertions": [], "deletions": [89, 90, 91], "modifications": [{"line_number": 92, "modified_line": "        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {"}]}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_ARRAY) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_ARRAY) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_ARRAY) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91, 92], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \" + baseTypeName());"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "            // Additional handling for expected token FIELD_NAME"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                        \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [89, 90, 91], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME || p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME || p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT || p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME || p.getCurrentToken() == JsonToken.START_OBJECT) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() == JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 92, "new_lines": ["            if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "                throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                        \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT || p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.FIELD_NAME,", "                    \"need JSON String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}, {"file_name": "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java", "target_lines": [["89", "        if (p.getCurrentToken() != JsonToken.START_OBJECT) {"], ["90", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,"], ["91", "                    \"need JSON Object to contain As.WRAPPER_OBJECT type information for class \"+baseTypeName());"], ["92", "        }"], ["98", "//"]], "insertions": [{"line_number": 98, "new_lines": ["        if (p.getCurrentToken() != JsonToken.START_OBJECT && p.getCurrentToken() != JsonToken.FIELD_NAME) {", "            throw ctxt.wrongTokenException(p, JsonToken.START_OBJECT,", "                    \"need JSON Object or String that contains type id (for subtype of \" + baseTypeName() + \")\");"]}], "deletions": [], "modifications": []}]