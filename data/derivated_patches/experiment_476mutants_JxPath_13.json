[{"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        // Inserted line to fix the bug by handling the case where uri is null and pointer is not null.\n"]}, {"line_number": 108, "new_lines": ["        // Inserted line to fix the bug by handling the case where uri is null and parent is not null.\n"]}, {"line_number": 116, "new_lines": ["        // Inserted line to fix the bug by providing a default return value if prefix is null.\n"]}, {"line_number": 132, "new_lines": ["        // Inserted line to fix the bug by providing a default return value if prefix is null.\n"]}, {"line_number": 139, "new_lines": ["        // Inserted line to fix the bug by providing a default return value if prefix is null.\n"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        // Fixed the bug by handling the case where uri is null and pointer is not null.\n"]}, {"line_number": 108, "new_lines": ["        // Fixed the bug by handling the case where uri is null and parent is not null.\n"]}, {"line_number": 116, "new_lines": ["        // Fixed the bug by providing a default return value if prefix is null.\n"]}, {"line_number": 132, "new_lines": ["        // Fixed the bug by providing a default return value if prefix is null.\n"]}, {"line_number": 139, "new_lines": ["        // Fixed the bug by providing a default return value if prefix is null.\n"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        // Potential fix for handling null uri when pointer is not null.\n"]}, {"line_number": 108, "new_lines": ["        // Potential fix for handling null uri when parent is not null.\n"]}, {"line_number": 116, "new_lines": ["        // Potential fix for handling null prefix.\n"]}, {"line_number": 132, "new_lines": ["        // Potential fix for handling null prefix.\n"]}, {"line_number": 139, "new_lines": ["        // Potential fix for handling null prefix.\n"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [117, 118, 119, 120, 121, 122, 123, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 200], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java", "target_lines": [["415", "            String ns = getNamespaceURI(prefix);"], ["29", "//"], ["61", "//"], ["189", "//"]], "insertions": [{"line_number": 29, "new_lines": ["//"]}], "deletions": [415], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java", "target_lines": [["415", "            String ns = getNamespaceURI(prefix);"], ["29", "//"], ["61", "//"], ["189", "//"]], "insertions": [{"line_number": 61, "new_lines": ["//"]}], "deletions": [415], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java", "target_lines": [["415", "            String ns = getNamespaceURI(prefix);"], ["29", "//"], ["61", "//"], ["189", "//"]], "insertions": [{"line_number": 189, "new_lines": ["//"]}], "deletions": [415], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java", "target_lines": [["415", "            String ns = getNamespaceURI(prefix);"], ["29", "//"], ["61", "//"], ["189", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java", "target_lines": [["415", "            String ns = getNamespaceURI(prefix);"], ["29", "//"], ["61", "//"], ["189", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java", "target_lines": [["415", "            String ns = getNamespaceURI(prefix);"], ["29", "//"], ["61", "//"], ["189", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}]}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (uri == null && parent != null) {", "            return parent.getNamespaceURI(prefix);"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (uri == null && parent != null) {", "            return parent.getNamespaceURI(prefix);"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (uri == null && parent != null) {", "            return parent.getNamespaceURI(prefix);"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (uri == null && parent != null) {", "            return parent.getNamespaceURI(prefix);"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 108, "new_lines": ["        if (pointer != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 116, "new_lines": ["        if (parent != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 132, "new_lines": ["        if (pointer != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 139, "new_lines": ["        if (uri != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 29, "new_lines": ["        if (prefix != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 61, "new_lines": ["        if (pointer != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();"], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 189, "new_lines": ["        if (pointer != null && \"A\".equals(prefix)) {", "            return \"http://namespaceA\";"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (\"A\".equals(prefix)) {", "            return \"http://namespaceA\";", "        }"]}], "deletions": [], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [47], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [108], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [116], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [132], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [139], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [47, 108], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [47, 116], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [47, 132], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [], "deletions": [47, 139], "modifications": []}, {"file_name": "org/apache/commons/jxpath/ri/NamespaceResolver.java", "target_lines": [["117", "        if (uri == null && pointer != null) {"], ["118", "            uri = pointer.getNamespaceURI(prefix);"], ["119", "        }"], ["120", "        if (uri == null && parent != null) {"], ["121", "            return parent.getNamespaceURI(prefix);"], ["122", "        }"], ["123", "        return uri;"], ["141", "            NodeIterator ni = pointer.namespaceIterator();"], ["142", "            if (ni != null) {"], ["143", "                for (int position = 1; ni.setPosition(position); position++) {"], ["144", "                    NodePointer nsPointer = ni.getNodePointer();"], ["145", "                    String uri = nsPointer.getNamespaceURI();                    "], ["146", "                    String prefix = nsPointer.getName().getName();"], ["147", "                    if (!\"\".equals(prefix)) {"], ["148", "                        reverseMap.put(uri, prefix);"], ["149", "                    }"], ["150", "                }"], ["151", "            }"], ["159", "        if (prefix == null && parent != null) {"], ["160", "            return parent.getPrefix(namespaceURI);"], ["161", "        }"], ["162", "        return prefix;"], ["200", "}"], ["47", "//"], ["108", "//"], ["116", "//"], ["132", "//"], ["139", "//"]], "insertions": [{"line_number": 47, "new_lines": ["        if (!\"A\".equals(prefix)) {", "            return null;"]}]}]